// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }
//
// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }
//
// model Customer {
//   id    Int    @id @default(autoincrement())
//   name  String
//   nic   String
//   email String @unique
//   phone String
// }
//
// model Item {
//   id       Int    @id @default(autoincrement())
//   name     String
//   quantity Int
//   price    Float
// }

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  CustomerID Int     @id @default(autoincrement())
  Name       String
  Address    String
  Email      String  @unique
  orders     Order[]
}

model Item {
  ItemID   Int            @id @default(autoincrement())
  Name     String
  Quantity Int
  Price    Decimal
  orders   OrderDetails[]
}

model Order {
  OrderID      Int            @id @default(autoincrement())
  CustomerID   Int
  OrderDate    DateTime       @default(now())
  customer     Customer       @relation(fields: [CustomerID], references: [CustomerID], onDelete: Cascade)
  orderDetails OrderDetails[]
}

model OrderDetails {
  OrderDetailsID Int     @id @default(autoincrement())
  OrderID        Int
  ItemID         Int
  Quantity       Int
  Price          Decimal
  order          Order   @relation(fields: [OrderID], references: [OrderID], onDelete: Cascade)
  item           Item    @relation(fields: [ItemID], references: [ItemID], onDelete: Cascade)
}
